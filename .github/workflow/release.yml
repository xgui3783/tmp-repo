name: Release on master

on:
  push:
    branches:
    - master
jobs:
  check-version:
    outputs:
      package-version: ${{ steps.set-version.outputs.package-version-from-json }}
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1
    - name: Set version
      id: set-version
      run: |
        PACKAGEJSON_VER=v$(cat package.json | jq -r '.version')
        echo "name=package-version-from-json::$PACKAGEJSON_VER"
        echo "::set-output name=package-version-from-json::$PACKAGEJSON_VER"
      
  create-release:
    needs: check-version
    if: success()
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.check-version.outputs.package-version }}
        release_name: Release v${{ needs.check-version.outputs.package-version }}
        draft: false
        prerelease: false

  # publish-npm:
  #   # needs: build
  #   if: success()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 12
  #         registry-url: https://registry.npmjs.org/
  #     - run: npm i
  #     - run: npm run build
  #     - run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.npm_token}}
